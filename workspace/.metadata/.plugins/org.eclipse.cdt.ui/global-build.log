Info: Nothing to build for CursesProject
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:26:12 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:26:13 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:26:14 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:26:42 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:26:43 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:26:43 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:27:52 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:27:53 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:27:54 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:29:32 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:29:33 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:29:33 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:30:52 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:30:53 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:30:54 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:31:40 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:31:41 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:31:42 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:34:23 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:34:25 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:34:25 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:34:59 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:35:00 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:35:00 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:40:13 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:40:14 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:40:15 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:44:21 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
..\src\CursesProject.cpp: In function 'int main()':
..\src\CursesProject.cpp:19:6: warning: variable 'windowMaxY' set but not used [-Wunused-but-set-variable]
  int windowMaxY = 0;
      ^~~~~~~~~~
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:44:22 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:44:22 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:44:42 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
..\src\CursesProject.cpp: In function 'int main()':
..\src\CursesProject.cpp:19:6: warning: variable 'windowMaxY' set but not used [-Wunused-but-set-variable]
  int windowMaxY = 0;
      ^~~~~~~~~~
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:44:43 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:44:44 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
Info: Nothing to build for BinaryFiles
Info: Nothing to build for Blackjack
18:45:15 **** Incremental Build of configuration Debug for project CursesProject ****
Info: Internal Builder is used for build
g++ "-IC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\include" -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\CursesProject.o" "..\\src\\CursesProject.cpp" 
..\src\CursesProject.cpp: In function 'int main()':
..\src\CursesProject.cpp:20:6: warning: variable 'windowMaxY' set but not used [-Wunused-but-set-variable]
  int windowMaxY = 0;
      ^~~~~~~~~~
g++ "-LC:\\Users\\Mathy\\Documents\\UDEMY\\LEARN_C++_BY_MAKING_GAMES\\workspace\\lib" -static-libgcc -static-libstdc++ -o CursesProject.exe "src\\CursesProject.o" -lpdcurses 
Info: Nothing to build for FileIO_Project
Info: Nothing to build for FileIo
Info: Nothing to build for HangMan
Info: Nothing to build for MiniProject
18:45:16 **** Incremental Build of configuration Debug for project MiniProject_Remastered ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\MiniProject_Remastered.o" "..\\src\\MiniProject_Remastered.cpp" 
..\src\MiniProject_Remastered.cpp: In function 'void SaveContacts(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:115:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:119:9: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < contactsDB.contacts.size() -1) {
       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void RemoveOption(ContactsDB&)':
..\src\MiniProject_Remastered.cpp:177:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < contactsDB.contacts.size() && !found; i++) {
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp: In function 'void DisplayOption(const ContactsDB&)':
..\src\MiniProject_Remastered.cpp:215:2: error: expected ';' before '}' token
  }
  ^
..\src\MiniProject_Remastered.cpp:217:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < contactsDB.contacts.size(); i++) {
                  ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62:0,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h: In instantiation of 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1849:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
        *__first = _GLIBCXX_MOVE(__val);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(Contact&&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1672:19:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:246:17: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
       *__result = _GLIBCXX_MOVE(*__first);
                 ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: error: no matching function for call to 'swap(const Contact&, const Contact&)'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\nested_exception.h:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\exception:171,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note: candidate: template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&)
     swap(_Tp& __a, _Tp& __b)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: note:   template argument deduction/substitution failed:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h: In substitution of 'template<class _Tp> typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = const Contact]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11:   required from 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:179:5: error: no type named 'type' in 'struct std::enable_if<false, void>'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _ForwardIterator2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:84:20:   required from 'void std::__move_median_to_first(_Iterator, _Iterator, _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1918:34:   required from '_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1950:38:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note: candidate: template<class _Tp, unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])
     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\move.h:202:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   mismatched types '_Tp [_Nm]' and 'const Contact'
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note: candidate: template<class _T1, class _T2> void std::swap(std::pair<_T1, _T2>&, std::pair<_T1, _T2>&)
     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
     ^~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:471:5: note:   template argument deduction/substitution failed:
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:148:11: note:   types 'std::pair<_T1, _T2>' and 'const Contact' have incompatible cv-qualifiers
       swap(*__a, *__b);
       ~~~~^~~~~~~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h: In instantiation of 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Distance = int; _Tp = Contact; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:335:22:   required from 'void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1669:23:   required from 'void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1930:25:   required from 'void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1945:27:   required from 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1965:25:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:220:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:61:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\algorithm:62,
                 from ..\src\MiniProject_Remastered.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_heap.h:226:29: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
    *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                             ^
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\MiniProject_Remastered.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h: In instantiation of 'static _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = const Contact*; _BI2 = const Contact*]':
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:588:58:   required from '_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = const Contact*; _BI2 = const Contact*]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:598:5:   required from '_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:668:48:   required from '_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _BI2 = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1848:8:   required from 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1882:25:   required from 'void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:1968:31:   required from 'void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Contact&, const Contact&)>]'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algo.h:4739:18:   required from 'void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<const Contact*, std::vector<Contact> >; _Compare = bool (*)(const Contact&, const Contact&)]'
..\src\MiniProject_Remastered.cpp:212:80:   required from here
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:548:18: error: passing 'const Contact' as 'this' argument discards qualifiers [-fpermissive]
      *--__result = std::move(*--__last);
      ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
..\src\MiniProject_Remastered.cpp:41:8: note:   in call to 'Contact& Contact::operator=(const Contact&)'
 struct Contact {
        ^~~~~~~
Info: Nothing to build for SortingVectors
Info: Nothing to build for Strings
18:45:17 **** Incremental Build of configuration Debug for project StringsPractice ****
Info: Internal Builder is used for build
g++ -O0 -g3 -Wall -c -fmessage-length=0 -o "src\\StringsPractice.o" "..\\src\\StringsPractice.cpp" 
..\src\StringsPractice.cpp: In function 'int GetConsonantIdx(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:50:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < word.size(); i++) {
                 ~~^~~~~~~~~~~~~
..\src\StringsPractice.cpp:51:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < vowels.size(); j++) {
                   ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:52:17: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
    if (!word[i] == vowels[i]) {
                 ^~
..\src\StringsPractice.cpp:52:17: error: no match for 'operator==' (operand types are 'bool' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
    if (!word[i] == vowels[i]) {
                  
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::fpos<_StateT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::pair<_T1, _T2>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::move_iterator<_IteratorL>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::allocator<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const _CharT*' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from 'bool' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:52:28: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and 'bool'
    if (!word[i] == vowels[i]) {
                            ^
..\src\StringsPractice.cpp: In function 'bool StartsWithVowel(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >)':
..\src\StringsPractice.cpp:62:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < vowels.size(); i++) {
                  ~~^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:63:14: error: no match for 'operator==' (operand types are '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' and '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::value_type {aka std::__cxx11::basic_string<char>}')
   if(word[0] == vowels[i]) {
               
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iosfwd:40:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\postypes.h:216:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::fpos<_StateT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_pair.h:431:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::pair<_T1, _T2>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:349:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::reverse_iterator<_Iterator>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1113:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorL>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:1119:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::move_iterator<_IteratorL>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:146:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:152:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::allocator<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5050:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5058:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5072:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const _CharT*' and 'char'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_string.h:5084:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:46:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:284:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:289:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_code&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:296:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\system_error:303:3: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}' to 'const std::error_condition&'
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_facets.h:48:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\basic_ios.h:37,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:44,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::istreambuf_iterator<_CharT, _Traits>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\vector:64:0,
                 from ..\src\StringsPractice.cpp:13:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_vector.h:1509:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const std::vector<_Tp, _Alloc>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\mingw32\bits\c++allocator.h:33:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\allocator.h:46,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\string:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note: candidate: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ext\new_allocator.h:139:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::new_allocator<_Tp>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note: candidate: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:863:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_Iterator, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
In file included from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\iostream:39,
                 from ..\src\StringsPractice.cpp:9:
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note: candidate: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^~~~~~~~
c:\mingw\lib\gcc\mingw32\6.3.0\include\c++\bits\stl_iterator.h:856:5: note:   template argument deduction/substitution failed:
..\src\StringsPractice.cpp:63:25: note:   mismatched types 'const __gnu_cxx::__normal_iterator<_IteratorL, _Container>' and '__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}'
   if(word[0] == vowels[i]) {
                         ^
..\src\StringsPractice.cpp:61:7: warning: unused variable 'startsWithVowel' [-Wunused-variable]
  bool startsWithVowel = false;
       ^~~~~~~~~~~~~~~
..\src\StringsPractice.cpp:67:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
Info: Nothing to build for Vectors
